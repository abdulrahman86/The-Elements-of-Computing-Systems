server {

        listen 80;
#       listen 4567 ssl;
        set $basepath "/home/www";

        set $domain "${host}";

        # check one name domain for simple application
        if ($domain ~ "^([a-zA-Z0-9-.]*)") {
                set $domain $1;
                set $rootpath "${domain}";
                set $sockpath "/tmp/${domain}";
                set $servername "${domain}";
        }

        # check multi name domain to multi application
        if ($domain ~ "^([a-zA-Z0-9-]*)[.]([a-zA-Z0-9-]*)[.](\w+)") {
                set $subdomain $1;
                set $domain $2.$3;
                set $rootpath "${domain}/subdomains/${subdomain}";
                set $sockpath "/tmp/${subdomain}";
                set $servername "${subdomain}.${domain}";
        }

        server_name $servername;
#       server_name huvu.ru;


        access_log "/var/log/nginx/server.${servername}.access.log";
        error_log "/var/log/nginx/server.main.error.log";

        root $basepath/$rootpath;

        location /static {
                alias "${basepath}/${rootpath}/htdocs/static";
        }

        location /media {
                alias "${basepath}/${rootpath}htdocs/media";
        }

        location / {
                uwsgi_pass unix://${sockpath}.sock; 
                include uwsgi_params;
        }

        # disallow access to git configs path
        location ~ /\.git {
                deny all;
        }

        # disallow access to yii code path
        location ~ /(protected|themes/classic/views)/ {
                deny all;
        }

       listen 443 ssl; # Certbot
       ssl_certificate "/etc/letsencrypt/live/huvu.ru/fullchain.pem"; # Certbot
       ssl_certificate_key "/etc/letsencrypt/live/huvu.ru/privkey.pem"; # Certbot
       include /etc/letsencrypt/options-ssl-nginx.conf; # Certbot


       if ($scheme != "https") {
           return 301 https://$host$request_uri;
       } # managed by Certbot

}
